{"version":3,"file":"themeSwitcher.js","mappings":";AAMA,MACI,aAEA,MAAMA,EAAiBA,IAAMC,aAAaC,QAAQ,SAG5CC,EAAoBA,KACxB,MAAMC,EAAcJ,IACpB,OAAII,IAIGC,OAAOC,WAAW,gCAAgCC,QAAU,OAAS,QAAO,EAG/EC,EAAWC,IACD,SAAVA,GAAoBJ,OAAOC,WAAW,gCAAgCC,QACxEG,SAASC,gBAAgBC,aAAa,gBAAiB,QAEvDF,SAASC,gBAAgBC,aAAa,gBAAiBH,EACzD,EAGFD,EAASL,KAET,MAAMU,EAAkBA,CAACJ,EAAOK,GAAQ,KACtC,MAAMC,EAAgBL,SAASM,cAAc,aAE7C,IAAKD,EACH,OAGF,MAAME,EAAoBP,SAASM,cAAc,kBAC3CE,EAAkBR,SAASM,cAAc,0BACzCG,EAAcT,SAASM,cAAe,yBAAwBP,OAC9DW,EAAiBD,EAAYH,cAAc,WAAWK,aAAa,QAEzEX,SAASY,iBAAiB,yBAAyBC,SAAQC,IACzDA,EAAQC,UAAUC,OAAO,UACzBF,EAAQZ,aAAa,eAAgB,QAAQ,IAG/CO,EAAYM,UAAUE,IAAI,UAC1BR,EAAYP,aAAa,eAAgB,QACzCM,EAAgBN,aAAa,OAAQQ,GACrC,MAAMQ,EAAsB,GAAEX,EAAkBY,gBAAgBV,EAAYW,QAAQC,gBACpFhB,EAAcH,aAAa,aAAcgB,GAErCd,GACFC,EAAcD,OAChB,EAGFT,OAAOC,WAAW,gCAAgC0B,iBAAiB,UAAU,KAC3E,MAAM5B,EAAcJ,IACA,UAAhBI,GAA2C,SAAhBA,GAC7BI,EAASL,IACX,IAGFE,OAAO2B,iBAAiB,oBAAoB,KAC1CnB,EAAgBV,KAEhBO,SAASY,iBAAiB,yBACvBC,SAAQU,IACPA,EAAOD,iBAAiB,SAAS,KAC/B,MAAMvB,EAAQwB,EAAOZ,aAAa,uBA9DnBZ,KAASR,aAAaiC,QAAQ,QAASzB,EAAM,EA+D5D0B,CAAe1B,GACfD,EAASC,GACTI,EAAgBJ,GAAO,EAAK,GAC5B,GACF,GAET,EAzED","sources":["webpack://dashmin/./js/theme-switcher.js"],"sourcesContent":["/*!\r\n * Color mode toggler for Bootstrap's docs (https://getbootstrap.com/)\r\n * Copyright 2011-2023 The Bootstrap Authors\r\n * Licensed under the Creative Commons Attribution 3.0 Unported License.\r\n */\r\n\r\n(() => {\r\n    'use strict'\r\n  \r\n    const getStoredTheme = () => localStorage.getItem('theme')\r\n    const setStoredTheme = theme => localStorage.setItem('theme', theme)\r\n  \r\n    const getPreferredTheme = () => {\r\n      const storedTheme = getStoredTheme()\r\n      if (storedTheme) {\r\n        return storedTheme\r\n      }\r\n  \r\n      return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light'\r\n    }\r\n  \r\n    const setTheme = theme => {\r\n      if (theme === 'auto' && window.matchMedia('(prefers-color-scheme: dark)').matches) {\r\n        document.documentElement.setAttribute('data-bs-theme', 'dark')\r\n      } else {\r\n        document.documentElement.setAttribute('data-bs-theme', theme)\r\n      }\r\n    }\r\n  \r\n    setTheme(getPreferredTheme())\r\n  \r\n    const showActiveTheme = (theme, focus = false) => {\r\n      const themeSwitcher = document.querySelector('#bd-theme')\r\n  \r\n      if (!themeSwitcher) {\r\n        return\r\n      }\r\n  \r\n      const themeSwitcherText = document.querySelector('#bd-theme-text')\r\n      const activeThemeIcon = document.querySelector('.theme-icon-active use')\r\n      const btnToActive = document.querySelector(`[data-bs-theme-value=\"${theme}\"]`)\r\n      const svgOfActiveBtn = btnToActive.querySelector('svg use').getAttribute('href')\r\n  \r\n      document.querySelectorAll('[data-bs-theme-value]').forEach(element => {\r\n        element.classList.remove('active')\r\n        element.setAttribute('aria-pressed', 'false')\r\n      })\r\n  \r\n      btnToActive.classList.add('active')\r\n      btnToActive.setAttribute('aria-pressed', 'true')\r\n      activeThemeIcon.setAttribute('href', svgOfActiveBtn)\r\n      const themeSwitcherLabel = `${themeSwitcherText.textContent} (${btnToActive.dataset.bsThemeValue})`\r\n      themeSwitcher.setAttribute('aria-label', themeSwitcherLabel)\r\n  \r\n      if (focus) {\r\n        themeSwitcher.focus()\r\n      }\r\n    }\r\n  \r\n    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', () => {\r\n      const storedTheme = getStoredTheme()\r\n      if (storedTheme !== 'light' && storedTheme !== 'dark') {\r\n        setTheme(getPreferredTheme())\r\n      }\r\n    })\r\n  \r\n    window.addEventListener('DOMContentLoaded', () => {\r\n      showActiveTheme(getPreferredTheme())\r\n  \r\n      document.querySelectorAll('[data-bs-theme-value]')\r\n        .forEach(toggle => {\r\n          toggle.addEventListener('click', () => {\r\n            const theme = toggle.getAttribute('data-bs-theme-value')\r\n            setStoredTheme(theme)\r\n            setTheme(theme)\r\n            showActiveTheme(theme, true)\r\n          })\r\n        })\r\n    })\r\n})();\r\n  "],"names":["getStoredTheme","localStorage","getItem","getPreferredTheme","storedTheme","window","matchMedia","matches","setTheme","theme","document","documentElement","setAttribute","showActiveTheme","focus","themeSwitcher","querySelector","themeSwitcherText","activeThemeIcon","btnToActive","svgOfActiveBtn","getAttribute","querySelectorAll","forEach","element","classList","remove","add","themeSwitcherLabel","textContent","dataset","bsThemeValue","addEventListener","toggle","setItem","setStoredTheme"],"sourceRoot":""}